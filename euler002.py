# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.


# Solution #1
# ===========

# result = 0
# fib = [1, 2, 3]
# n = 5
# while n < 4000000:
#     n = fib[-1]+fib[-2]
#     if n < 4000000:
#         fib.append(n)
#         if n % 2 == 0:
#             result += n
#     print(fib)


# Solution #2
# ===========

# sum = 0
# i, j = 1, 2
# while j < 4000000:
#     if j % 2 == 0:
#         sum += j
#     i, j = j, j + i
#
# print(sum)


def fib(n):
    if n < 2:
        return 1
    else:
        return fib(n - 1) + fib(n - 2)





def fib(n):
    i, j = 1, 2
    for index in range(n):
        i, j = j, j + i
    return i


for i in range(10):
    print(i, fib(i))

0, 1, 2
1, 2, 3
2, 3, 5
